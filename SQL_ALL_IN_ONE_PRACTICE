-- Employee Table
CREATE TABLE Employees (
    EmpID INT PRIMARY KEY,
    EmpName VARCHAR(50),
    Department VARCHAR(30),
    Salary INT,
    HireDate DATE
);

INSERT INTO Employees VALUES
(101, 'Arjun', 'IT', 60000, '2020-01-10'),
(102, 'Meera', 'HR', 45000, '2019-03-15'),
(103, 'Rahul', 'Finance', 55000, '2021-07-23'),
(104, 'Priya', 'IT', 75000, '2018-09-01'),
(105, 'Kiran', 'Finance', 50000, '2022-11-12');

-- Department Table
CREATE TABLE Departments (
    DeptID INT PRIMARY KEY,
    DeptName VARCHAR(30),
    Location VARCHAR(30)
);

INSERT INTO Departments VALUES
(1, 'IT', 'Chennai'),
(2, 'HR', 'Bangalore'),
(3, 'Finance', 'Hyderabad');

-- Project Table
CREATE TABLE Projects (
EmpID INT,
    ProjID INT PRIMARY KEY,
    ProjName VARCHAR(50),
    DeptID INT,
    Budget INT,
    FOREIGN KEY (DeptID) REFERENCES Departments(DeptID)
);

INSERT INTO Projects VALUES
(102,201, 'AI Automation', 1, 1000000),
(103,202, 'Recruitment Portal', 2, 400000),
(105,203, 'Tax Management System', 3, 800000);

-- Employee_Project Mapping
CREATE TABLE EmployeeProject (
    EmpID INT,
    ProjID INT,
    Role VARCHAR(30),
    PRIMARY KEY(EmpID, ProjID),
    FOREIGN KEY (EmpID) REFERENCES Employees(EmpID),
    FOREIGN KEY (ProjID) REFERENCES Projects(ProjID)
);

INSERT INTO EmployeeProject VALUES
(101, 201, 'Developer'),
(104, 201, 'Team Lead'),
(102, 202, 'HR Coordinator'),
(103, 203, 'Accountant'),
(105, 203, 'Analyst');
select EMPNAME FROM Employees WHERE Department='IT';
SELECT EmpName FROM Employees WHERE SALARY between 50000 AND 70000;
SELECT EMPNAME FROM Employees WHERE EMPNAME LIKE 'A%';
SELECT EMPNAME FROM Employees WHERE YEAR(HireDate)=2020;
SELECT EMPNAME FROM Employees WHERE Department!='IT';
SELECT EMPNAME,HIREDATE FROM Employees 
ORDER BY HIREDATE;
SELECT distinct(Department) FROM Employees;
SELECT EMPNAME,DEPARTMENT FROM Employees
ORDER BY Department;
SELECT EMPNAME ,SALARY FROM Employees
ORDER BY SALARY DESC;
SELECT SUM(SALARY) FROM Employees;

SELECT AVG(SALARY) FROM Employees
WHERE Department='IT';
SELECT DEPARTMENT,MAX(SALARY) AS MAXIMUM_SALARY
FROM Employees
group BY DEPARTMENT;


SELECT DEPARTMENT,MIN(SALARY) AS MINIMUM_SALARY
FROM Employees
group BY DEPARTMENT;
SELECT EMPNAME,COUNT(EMPNAME) FROM Employees
WHERE HIREDATE >'2020-01-01'
GROUP BY EMPNAME;

SELECT DEPARTMENT,COUNT(EMPNAME) AS TOTALEMPLOYEES
FROM Employees
GROUP BY DEPARTMENT
HAVING COUNT(EMPNAME) >1;

SELECT DEPARTMENT,AVG(SALARY) AS AVERAGESALARY
FROM Employees
WHERE DEPARTMENT='IT'
GROUP BY DEPARTMENT
HAVING AVG(SALARY) >55000;


SELECT EMPNAME ,SALARY
FROM Employees
WHERE SALARY>ANY(SELECT AVG(SALARY) FROM Employees);


SELECT EMPNAME,SALARY 
FROM Employees
WHERE SALARY>ALL(SELECT MAX(SALARY) FROM Employees);
SELECT EMPNAME,DEPARTMENT
FROM Employees
WHERE DEPARTMENT=ANY(SELECT DEPARTMENT FROM Employees WHERE EMPNAME='ARJUN');

SELECT EMPNAME,SALARY
FROM Employees
WHERE SALARY>ALL(SELECT SALARY FROM Employees WHERE EMPNAME='PRIYA');

SELECT EMPNAME,SALARY
FROM Employees
WHERE SALARY<ALL(SELECT SALARY FROM Employees WHERE EMPNAME='PRIYA');

SELECT EMPNAME FROM EMPLOYEES AS E 
JOIN DEPARTMENTS AS D 
ON E.DEPARTMENT =D.DeptName;

/*select EmpNAME.E,ProjName.P
--FROM EMPLOYEES AS E
--JOIN Projects AS P 
ON E.EmpID=P.EmpID;*/


-- JOINS
CREATE TABLE Product (
    ProductID INT PRIMARY KEY,
    ProductName VARCHAR(100),
    Price DECIMAL(10, 2)
);

CREATE TABLE Orders (
    OrderID INT PRIMARY KEY,
    ProductID INT,
    Quantity INT,
    OrderDate DATE,
    FOREIGN KEY (ProductID) REFERENCES Product(ProductID)
);
INSERT INTO Product (ProductID, ProductName, Price) VALUES
(1, 'Laptop', 1000.00),
(2, 'Mouse', 25.00),
(3, 'Keyboard', 45.00),
(4, 'Monitor', 150.00),
(5, 'Webcam', 75.00);

-- Orders
INSERT INTO Orders (OrderID, ProductID, Quantity, OrderDate) VALUES
(101, 1, 2, '2025-08-01'),
(102, 2, 5, '2025-08-02'),
(103, 3, 3, '2025-08-03'),
(104, 1, 1, '2025-08-04'),
(105, 4, 2, '2025-08-04'),
(106, 5, 4, '2025-08-05');

SELECT O.ProductID,P.ProductName,P.Price
FROM Product AS P 
JOIN ORDERS AS O 
ON P.ProductID=O.ProductID;

SELECT P.PRICE,O.OrdeRID,(P.PRICE*O.QUANTITY)
FROM Product AS P 
JOIN ORDERS AS O 
ON P.ProductID=O.ProductID;

SELECT P.ProductName,O.OrderID 
FROM  PRODUCT AS P
INNER JOIN ORDERS AS O
ON P.ProductID=O.ProductID;

SELECT O.OrderID,P.ProductName
FROM PRODUCT AS P 
JOIN ORDERS AS O 
ON P.PRODUCTID=O.PRODUCTID
WHERE P.PRICE>100;

SELECT O.OrderID,P.PRODUCTID,P.ProductName,P.PRICE
FROM PRODUCT AS P 
JOIN ORDERS AS O 
ON P.PRODUCTID=O.PRODUCTID
WHERE OrderDate >='2025-08-03';

SELECT P.PRODUCTID,P.ProductName,P.PRICE,SUM(O.QUANTITY) AS TOTALQUANTITY
FROM PRODUCT AS P 
LEFT JOIN ORDERS AS O 
ON O.PRODUCTID=P.PRODUCTID
GROUP BY P.PRODUCTID,P.ProductName,P.PRICE;

SELECT P.PRODUCTID,P.ProductName,P.PRICE,SUM(O.QUANTITY) AS TOTALQUANTITY
FROM PRODUCT AS P 
LEFT JOIN ORDERS AS O 
ON O.PRODUCTID=P.PRODUCTID
GROUP BY P.PRODUCTID,P.ProductName,P.PRICE
HAVING SUM(O.QUANTITY)>1;




